================================================================================
                         テスト実行結果サマリー (2025-04-06 16:36:05)
================================================================================

【実行環境情報】
環境: Windows 10
Python: 3.x
仮想環境: venv
実行日時: 2025-04-06

【テスト実行状況】
実行テスト数: 29件
成功: 14件
失敗: 15件
成功率: 48.3%

================================================================================
                         テスト結果詳細 - 成功したテスト
================================================================================

1. access (tests/results/access_test_results.json)
--------------------------------------------------------------------------------
ステータス: 成功 (5/5テスト成功)

テスト名                     対応ファイル                             メソッド                          検証機能
--------------------------------------------------------------------------------
プロジェクト構造確認               src/utils/environment.py           get_project_root()            基本ディレクトリ構造が適切で、アプリケーションが正しく実行できる環境が整っている
モジュール構造確認                src/modules/*                      各種モジュール検証                     ビジネスロジックモジュールの構造が維持され、機能拡張時の整合性が担保されている
ユーティリティ確認                src/utils/*                        各種ユーティリティ関数                   共通ユーティリティが適切に構成され、環境管理とロギング機能が利用可能な状態にある
ログディレクトリ確認               src/utils/logging_config.py        get_logger()                  ログ出力先が確保され、アプリケーションの動作ログが適切に記録できる
設定ファイル確認                 src/utils/environment.py           get_config_value()            環境変数と設定ファイルが正しく配置され、アプリケーションが設定を適切に読み込める

3. google cloud (tests/results/google_cloud_test_results.json)
--------------------------------------------------------------------------------
ステータス: 一部成功 (2/5テスト成功)

テスト名                     対応ファイル                             メソッド                          検証機能
--------------------------------------------------------------------------------
test_credentials_loading src/utils/bigquery.py              get_credentials()             サービスアカウント認証情報が適切に読み込めるか確認する
test_query_execution     src/utils/bigquery.py              run_query()                   基本的なSQLクエリが実行できるか確認する

4. login analyzer (tests/results/login_analyzer_test_results.json)
--------------------------------------------------------------------------------
ステータス: 一部成功 (4/5テスト成功)

テスト名                     対応ファイル                             メソッド                          検証機能
--------------------------------------------------------------------------------
test_login_failure_detectionsrc/modules/selenium/browser.py    analyze_page_content(), find_element_by_text()ログイン失敗時のエラーメッセージを適切に検出できる
test_login_form_detectionsrc/modules/selenium/browser.py    analyze_page_content()        ログインフォームを自動的に検出し、入力フィールドやボタンを識別できる
test_login_page_performancesrc/modules/selenium/browser.py    _get_page_status()            ページロード時間の計測とパフォーマンス検証が適切に行える
test_login_security_featuressrc/modules/selenium/browser.py    get_page_source()             HTTPS、CSRF対策、二要素認証などのセキュリティ機能の有無を検出できる

6. selenium (tests/results/selenium_test_results.json)
--------------------------------------------------------------------------------
ステータス: 成功 (3/3テスト成功)

テスト名                     対応ファイル                             メソッド                          検証機能
--------------------------------------------------------------------------------
test_browser_selectors_initializationsrc/modules/selenium/browser.py    _load_selectors()             セレクタCSVファイルが正しく読み込まれ、ログイン用セレクタが適切に初期化される
test_dummy_login_page    src/modules/selenium/browser.py    execute_script(), analyze_page_content()JavaScriptでのログインフォーム操作とアラート処理が適切に実行できる
test_httpbin_form_submissionsrc/modules/selenium/browser.py    navigate_to(), find_element() 外部サイトへのフォーム送信とレスポンス検証が正常に行える

================================================================================
                         テスト結果詳細 - 失敗したテスト
================================================================================

2. error handling (tests/results/error_handling_test_results.json)
--------------------------------------------------------------------------------
失敗テスト数: 6/6

テスト名                     エラー内容                              修正案
--------------------------------------------------------------------------------
test_alert_and_confirm_dialogsAttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_invalid_protocol    AttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_nonexistent_page    AttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_page_with_errors    AttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_redirect_handling   AttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_slow_loading_page   AttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正

3. google cloud (tests/results/google_cloud_test_results.json)
--------------------------------------------------------------------------------
失敗テスト数: 3/5

テスト名                     エラー内容                              修正案
--------------------------------------------------------------------------------
test_dataset_exists      データセット 'auth_test' が存在しません         テスト前にデータセットを作成するか、テスト用の別のデータセットを指定する
test_get_table_schema    テーブル 'auth_test.sample_table' のスキーマを取得できませんでしたテーブルが存在しない場合はスキップするよう修正する
test_table_exists        テーブル 'auth_test.sample_table' が存在しませんテスト前にテーブルを作成するか、テスト用の別のテーブルを指定する

4. login analyzer (tests/results/login_analyzer_test_results.json)
--------------------------------------------------------------------------------
失敗テスト数: 1/5

テスト名                     エラー内容                              修正案
--------------------------------------------------------------------------------
test_login_success_workflowエラーメッセージが検出されませんでした                成功メッセージの検出条件を緩和し、代替テキストも検索するよう修正

5. page analyzer (tests/results/page_analyzer_test_results.json)
--------------------------------------------------------------------------------
失敗テスト数: 5/5

テスト名                     エラー内容                              修正案
--------------------------------------------------------------------------------
test_basic_page_analysis AttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_form_automation     AttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_interactive_elementsAttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_page_state_detectionAttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正
test_search_elements_by_textAttributeError: 'bool' object has no attribute 'lower'headlessの設定値がbool型の場合の処理を修正

================================================================================
                         エラーパターン分析
================================================================================

■ AttributeError (11件)
--------------------------------------------------------------------------------
1. error handling > test_nonexistent_page: AttributeError: 'bool' object has no attribute 'lower'
   修正案: headlessの設定値がbool型の場合の処理を修正
2. error handling > test_invalid_protocol: AttributeError: 'bool' object has no attribute 'lower'
   修正案: headlessの設定値がbool型の場合の処理を修正
3. error handling > test_page_with_errors: AttributeError: 'bool' object has no attribute 'lower'
   修正案: headlessの設定値がbool型の場合の処理を修正
4. error handling > test_redirect_handling: AttributeError: 'bool' object has no attribute 'lower'
   修正案: headlessの設定値がbool型の場合の処理を修正
5. error handling > test_slow_loading_page: AttributeError: 'bool' object has no attribute 'lower'
   修正案: headlessの設定値がbool型の場合の処理を修正
... 他 6 件

■ その他のエラー (4件)
--------------------------------------------------------------------------------
1. google cloud > test_dataset_exists: データセット 'auth_test' が存在しません
   修正案: テスト前にデータセットを作成するか、テスト用の別のデータセットを指定する
2. google cloud > test_table_exists: テーブル 'auth_test.sample_table' が存在しません
   修正案: テスト前にテーブルを作成するか、テスト用の別のテーブルを指定する
3. google cloud > test_get_table_schema: テーブル 'auth_test.sample_table' のスキーマを取得できませんでした
   修正案: テーブルが存在しない場合はスキップするよう修正する
4. login analyzer > test_login_success_workflow: エラーメッセージが検出されませんでした
   修正案: 成功メッセージの検出条件を緩和し、代替テキストも検索するよう修正

================================================================================
                         ヘッドレスモード関連の修正内容
================================================================================

対象ファイル: tests/test_login_analyzer.py
修正内容: ブラウザインスタンス初期化時のheadless設定を修正

修正前:
```python
headless = env.get_config_value("BROWSER", "headless", "false")
```

修正後:
```python
headless_config = env.get_config_value("BROWSER", "headless", "false")
headless = headless_config if isinstance(headless_config, bool) else headless_config.lower() == "true"
```

解決したエラー: Boolean型とString型の互換性問題によるAttributeError
効果: 設定がString型で"true"や"false"の場合も、Boolean型で"True"や"False"の場合も正しく処理できるようになった

================================================================================
                         今後の改善点
================================================================================

1. テスト失敗時のスクリーンショット保存機能の強化
2. WebDriverManagerのバージョン互換性確保
3. 設定値の型変換処理の共通化
4. エラーメッセージ検出ロジックの精度向上
5. ログファイル出力フォーマットの標準化
6. BigQueryテスト用のモックデータセット作成
7. テスト前提条件チェックの追加
