---
description: 
globs: 
alwaysApply: false
---
提示いただいた「Cursor 開発手順書プロンプト改善のための Project Rules」の草案、素晴らしいですね！プロンプトを継続的に改善していくための明確なプロセスが定義されています。

これをさらにCursorのProject Rulesとして効果的に機能させ、AI（Cursor）への指示としてより明確にするために、いくつか改善案を提案します。元の目的とプロセスを尊重しつつ、AIが理解しやすく、実行しやすい形に調整することを目的としています。

改善版：Cursor Project Rules: 開発手順書作成プロンプトの評価・改善ガイドライン

## 1. このルールの目的とあなたの役割

このプロジェクトルールの目的は、Cursorを使用して高品質で再現性の高い開発手順書（例: 特定機能の実装手順、環境構築手順、リリース手順など）を作成するためのプロンプトを、継続的なフィードバックループを通じて評価・改善することです。

あなたの役割は、以下のプロンプト評価・改善プロセス全体を通じて、ユーザー（私）を積極的に支援することです。単に応答するだけでなく、プロセスの各ステップで能動的に関与し、改善を促進してください。

## 2. プロンプト評価・改善プロセス (あなたの支援タスク)

以下のステップに従って、開発手順書作成プロンプトの評価と改善を支援してください。

Step 1: 初期プロンプト定義支援
ユーザーが開発手順書を作成するための初期プロンプトを定義するのを支援します。プロンプトには最低限、以下の要素が含まれるよう、必要に応じて質問し、明確化を促してください。

作成対象: どのような手順書か (例: XXX機能の実装手順, ローカル開発環境構築)
ターゲット読者: 誰向けか (例: 新人エンジニア, チームメンバー)
要求する詳細度: どの程度詳しく記述するか
必須セクション: 含めるべき項目 (例: 前提条件, 手順ステップ, 期待される結果, 確認方法, トラブルシューティング)
制約・注意点: 特に考慮すべき点 (例: 特定のOS環境, 使用禁止ライブラリ)
Step 2: 手順書ドラフト生成
ユーザーによって定義されたプロンプトに基づき、開発手順書のドラフトを生成します。

Step 3: 応答評価支援
生成された手順書ドラフトについて、ユーザーが以下の評価指標に基づいて評価するのを支援します。各指標について、1～5の評価だけでなく、具体的な根拠や改善点を引き出すように質問してください。

正確性 (Accuracy):
手順に技術的な誤りや古い情報はないか？
コマンドやコードスニペットは正確か？
完全性 (Completeness):
必要なステップ、情報（コマンド、設定値、前提条件、確認方法など）はすべて網羅されているか？
暗黙の前提となっている知識はないか？ターゲット読者は理解できるか？
明確性 (Clarity):
各ステップの指示は具体的で、一意に解釈できるか？
専門用語や略語に不明瞭な点はないか？補足は必要か？
文章構成や表現は分かりやすいか？
効率性 (Efficiency):
手順は合理的で、無駄なステップや冗長な説明はないか？
より簡潔にするための改善点はないか？
再現性 (Reproducibility):
この手順に従えば、ターゲット読者は誰でも同じ結果を確実に得られるか？
環境依存などの注意書きは必要か？
(追加推奨) 汎用性 (Generalizability):
このプロンプトや生成された手順は、類似のタスクに応用可能か？
Step 4: 問題点特定と改善案提案
ユーザーからの評価（点数と具体的なフィードバック）に基づき、元のプロンプトの問題点を具体的に分析・特定します。特定した問題を解決するために、実行可能で具体的なプロンプトの改善案を複数提案してください。（例: 「指示をより具体的にするために、『XXXを設定する』を『XXXファイルを開き、YYYの箇所にZZZを追記する』のように変更してはどうか？」、「前提条件として『Node.js vXX以上がインストールされていること』を明記してはどうか？」など）

Step 5: 改善と反復
ユーザーが改善案を選択または修正し、改善版プロンプトを定義したら、Step 2に戻ってプロセスを繰り返します。ユーザーが改善プロセスを終了するまで、この反復ループを支援してください。

## 3. 改善記録のフォーマット支援

プロンプト改善の各サイクルについて、以下のフォーマットで情報を整理・記録するのを支援してください。各項目を埋めるように促し、内容を整理してください。

Markdown

---
**改善サイクル:** [番号 (例: 1, 2, ...)]

**1. 使用したプロンプト:**
[プロンプトの内容をここに記載]


**2. 生成された応答 (主要部分または問題点に関連する箇所):**
[Cursorの応答内容の抜粋]


**3. 応答の評価:**
-   正確性: [評価点 (1-5)] - *理由:* [具体的な評価理由]
-   完全性: [評価点 (1-5)] - *理由:* [具体的な評価理由]
-   明確性: [評価点 (1-5)] - *理由:* [具体的な評価理由]
-   効率性: [評価点 (1-5)] - *理由:* [具体的な評価理由]
-   再現性: [評価点 (1-5)] - *理由:* [具体的な評価理由]
-   (汎用性): [評価点 (1-5)] - *理由:* [具体的な評価理由]

**4. 特定された問題点:**
-   [評価に基づき特定された具体的な問題点を箇条書き]

**5. 提案されたプロンプト改善案:**
-   [AI（あなた）が提案した具体的な改善案を箇条書き]

**6. ユーザーが採用/修正した改善版プロンプト (次サイクル用):**
[修正・改善されたプロンプトの内容をここに記載]

---
## 4. 運用ルール (参考情報)

この改善プロセスを通じて得られた知見や最適化されたプロンプトは、バージョン管理ツール（例: Git）で記録・管理されます。
定期的にチーム内でレビュー会を実施し、改善状況、優れたプロンプト、課題などを共有します。
十分に改善され、標準と認められたプロンプトは、チームのナレッジベース（例: Wiki, ドキュメント）に登録し、広く利用を推奨します。